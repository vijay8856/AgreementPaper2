diff --git a/node_modules/react-native-document-picker/android/build/generated/source/buildConfig/debug/com/reactnativedocumentpicker/BuildConfig.java b/node_modules/react-native-document-picker/android/build/generated/source/buildConfig/debug/com/reactnativedocumentpicker/BuildConfig.java
new file mode 100644
index 0000000..306c673
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/buildConfig/debug/com/reactnativedocumentpicker/BuildConfig.java
@@ -0,0 +1,12 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.reactnativedocumentpicker;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String LIBRARY_PACKAGE_NAME = "com.reactnativedocumentpicker";
+  public static final String BUILD_TYPE = "debug";
+  // Field from default config.
+  public static final boolean IS_NEW_ARCHITECTURE_ENABLED = true;
+}
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/java/com/reactnativedocumentpicker/NativeDocumentPickerSpec.java b/node_modules/react-native-document-picker/android/build/generated/source/codegen/java/com/reactnativedocumentpicker/NativeDocumentPickerSpec.java
new file mode 100644
index 0000000..b2ea400
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/java/com/reactnativedocumentpicker/NativeDocumentPickerSpec.java
@@ -0,0 +1,48 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJavaSpec.js
+ *
+ * @nolint
+ */
+
+package com.reactnativedocumentpicker;
+
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.bridge.Promise;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContextBaseJavaModule;
+import com.facebook.react.bridge.ReactMethod;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.turbomodule.core.interfaces.TurboModule;
+import javax.annotation.Nonnull;
+
+public abstract class NativeDocumentPickerSpec extends ReactContextBaseJavaModule implements TurboModule {
+  public static final String NAME = "RNDocumentPicker";
+
+  public NativeDocumentPickerSpec(ReactApplicationContext reactContext) {
+    super(reactContext);
+  }
+
+  @Override
+  public @Nonnull String getName() {
+    return NAME;
+  }
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void pick(ReadableMap options, Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void releaseSecureAccess(ReadableArray uris, Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void pickDirectory(Promise promise);
+}
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/CMakeLists.txt b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/CMakeLists.txt
new file mode 100644
index 0000000..74ab73b
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/CMakeLists.txt
@@ -0,0 +1,36 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE on)
+
+file(GLOB react_codegen_SRCS CONFIGURE_DEPENDS *.cpp react/renderer/components/rndocumentpicker/*.cpp)
+
+add_library(
+  react_codegen_rndocumentpicker
+  OBJECT
+  ${react_codegen_SRCS}
+)
+
+target_include_directories(react_codegen_rndocumentpicker PUBLIC . react/renderer/components/rndocumentpicker)
+
+target_link_libraries(
+  react_codegen_rndocumentpicker
+  fbjni
+  jsi
+  # We need to link different libraries based on whether we are building rncore or not, that's necessary
+  # because we want to break a circular dependency between react_codegen_rncore and reactnative
+  reactnative
+)
+
+target_compile_options(
+  react_codegen_rndocumentpicker
+  PRIVATE
+  -DLOG_TAG=\"ReactNative\"
+  -fexceptions
+  -frtti
+  -std=c++20
+  -Wall
+)
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ComponentDescriptors.cpp b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ComponentDescriptors.cpp
new file mode 100644
index 0000000..4f20581
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ComponentDescriptors.cpp
@@ -0,0 +1,22 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorCpp.js
+ */
+
+#include <react/renderer/components/rndocumentpicker/ComponentDescriptors.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+void rndocumentpicker_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry) {
+
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ComponentDescriptors.h b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ComponentDescriptors.h
new file mode 100644
index 0000000..7a5e8b0
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ComponentDescriptors.h
@@ -0,0 +1,24 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rndocumentpicker/ShadowNodes.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+
+
+void rndocumentpicker_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/EventEmitters.cpp b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/EventEmitters.cpp
new file mode 100644
index 0000000..9bf6ff4
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/EventEmitters.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterCpp.js
+ */
+
+#include <react/renderer/components/rndocumentpicker/EventEmitters.h>
+
+
+namespace facebook::react {
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/EventEmitters.h b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/EventEmitters.h
new file mode 100644
index 0000000..2845a63
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/EventEmitters.h
@@ -0,0 +1,17 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewEventEmitter.h>
+
+
+namespace facebook::react {
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/Props.cpp b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/Props.cpp
new file mode 100644
index 0000000..7ed9515
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/Props.cpp
@@ -0,0 +1,19 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsCpp.js
+ */
+
+#include <react/renderer/components/rndocumentpicker/Props.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/Props.h b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/Props.h
new file mode 100644
index 0000000..870864b
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/Props.h
@@ -0,0 +1,18 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsH.js
+ */
+#pragma once
+
+
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ShadowNodes.cpp b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ShadowNodes.cpp
new file mode 100644
index 0000000..c006010
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ShadowNodes.cpp
@@ -0,0 +1,17 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeCpp.js
+ */
+
+#include <react/renderer/components/rndocumentpicker/ShadowNodes.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ShadowNodes.h b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ShadowNodes.h
new file mode 100644
index 0000000..f24df23
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/ShadowNodes.h
@@ -0,0 +1,23 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rndocumentpicker/EventEmitters.h>
+#include <react/renderer/components/rndocumentpicker/Props.h>
+#include <react/renderer/components/rndocumentpicker/States.h>
+#include <react/renderer/components/view/ConcreteViewShadowNode.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/States.cpp b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/States.cpp
new file mode 100644
index 0000000..98ca36e
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/States.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateCpp.js
+ */
+#include <react/renderer/components/rndocumentpicker/States.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/States.h b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/States.h
new file mode 100644
index 0000000..c011ed8
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/States.h
@@ -0,0 +1,19 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateH.js
+ */
+#pragma once
+
+#ifdef ANDROID
+#include <folly/dynamic.h>
+#endif
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
\ No newline at end of file
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/rndocumentpickerJSI-generated.cpp b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/rndocumentpickerJSI-generated.cpp
new file mode 100644
index 0000000..7989b31
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/rndocumentpickerJSI-generated.cpp
@@ -0,0 +1,46 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleCpp.js
+ */
+
+#include "rndocumentpickerJSI.h"
+
+namespace facebook::react {
+
+static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_getConstants(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->getConstants(
+    rt
+  );
+}
+static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_pick(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->pick(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
+  );
+}
+static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_releaseSecureAccess(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->releaseSecureAccess(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt)
+  );
+}
+static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_pickDirectory(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->pickDirectory(
+    rt
+  );
+}
+
+NativeDocumentPickerCxxSpecJSI::NativeDocumentPickerCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNDocumentPicker", jsInvoker) {
+  methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeDocumentPickerCxxSpecJSI_getConstants};
+  methodMap_["pick"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerCxxSpecJSI_pick};
+  methodMap_["releaseSecureAccess"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerCxxSpecJSI_releaseSecureAccess};
+  methodMap_["pickDirectory"] = MethodMetadata {0, __hostFunction_NativeDocumentPickerCxxSpecJSI_pickDirectory};
+}
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/rndocumentpickerJSI.h b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/rndocumentpickerJSI.h
new file mode 100644
index 0000000..0d08aff
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/react/renderer/components/rndocumentpicker/rndocumentpickerJSI.h
@@ -0,0 +1,216 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/TurboModule.h>
+#include <react/bridging/Bridging.h>
+
+namespace facebook::react {
+
+
+  
+#pragma mark - NativeDocumentPickerDirectoryPickerResponse
+
+template <typename P0>
+struct NativeDocumentPickerDirectoryPickerResponse {
+  P0 uri;
+  bool operator==(const NativeDocumentPickerDirectoryPickerResponse &other) const {
+    return uri == other.uri;
+  }
+};
+
+template <typename T>
+struct NativeDocumentPickerDirectoryPickerResponseBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.uri)>(rt, value.getProperty(rt, "uri"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static jsi::String uriToJs(jsi::Runtime &rt, decltype(types.uri) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "uri", bridging::toJs(rt, value.uri, jsInvoker));
+    return result;
+  }
+};
+
+
+
+#pragma mark - NativeDocumentPickerDocumentPickerResponse
+
+template <typename P0, typename P1, typename P2, typename P3, typename P4, typename P5>
+struct NativeDocumentPickerDocumentPickerResponse {
+  P0 uri;
+  P1 name;
+  P2 copyError;
+  P3 fileCopyUri;
+  P4 type;
+  P5 size;
+  bool operator==(const NativeDocumentPickerDocumentPickerResponse &other) const {
+    return uri == other.uri && name == other.name && copyError == other.copyError && fileCopyUri == other.fileCopyUri && type == other.type && size == other.size;
+  }
+};
+
+template <typename T>
+struct NativeDocumentPickerDocumentPickerResponseBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.uri)>(rt, value.getProperty(rt, "uri"), jsInvoker),
+      bridging::fromJs<decltype(types.name)>(rt, value.getProperty(rt, "name"), jsInvoker),
+      bridging::fromJs<decltype(types.copyError)>(rt, value.getProperty(rt, "copyError"), jsInvoker),
+      bridging::fromJs<decltype(types.fileCopyUri)>(rt, value.getProperty(rt, "fileCopyUri"), jsInvoker),
+      bridging::fromJs<decltype(types.type)>(rt, value.getProperty(rt, "type"), jsInvoker),
+      bridging::fromJs<decltype(types.size)>(rt, value.getProperty(rt, "size"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static jsi::String uriToJs(jsi::Runtime &rt, decltype(types.uri) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static jsi::String nameToJs(jsi::Runtime &rt, decltype(types.name) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static jsi::String copyErrorToJs(jsi::Runtime &rt, decltype(types.copyError) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static std::optional<jsi::String> fileCopyUriToJs(jsi::Runtime &rt, decltype(types.fileCopyUri) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static std::optional<jsi::String> typeToJs(jsi::Runtime &rt, decltype(types.type) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static std::optional<double> sizeToJs(jsi::Runtime &rt, decltype(types.size) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "uri", bridging::toJs(rt, value.uri, jsInvoker));
+    result.setProperty(rt, "name", bridging::toJs(rt, value.name, jsInvoker));
+    if (value.copyError) {
+      result.setProperty(rt, "copyError", bridging::toJs(rt, value.copyError.value(), jsInvoker));
+    }
+    result.setProperty(rt, "fileCopyUri", bridging::toJs(rt, value.fileCopyUri, jsInvoker));
+    result.setProperty(rt, "type", bridging::toJs(rt, value.type, jsInvoker));
+    result.setProperty(rt, "size", bridging::toJs(rt, value.size, jsInvoker));
+    return result;
+  }
+};
+
+class JSI_EXPORT NativeDocumentPickerCxxSpecJSI : public TurboModule {
+protected:
+  NativeDocumentPickerCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  virtual jsi::Object getConstants(jsi::Runtime &rt) = 0;
+  virtual jsi::Value pick(jsi::Runtime &rt, jsi::Object options) = 0;
+  virtual jsi::Value releaseSecureAccess(jsi::Runtime &rt, jsi::Array uris) = 0;
+  virtual jsi::Value pickDirectory(jsi::Runtime &rt) = 0;
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeDocumentPickerCxxSpec : public TurboModule {
+public:
+  jsi::Value create(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.create(rt, propName);
+  }
+
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override {
+    return delegate_.getPropertyNames(runtime);
+  }
+
+  static constexpr std::string_view kModuleName = "RNDocumentPicker";
+
+protected:
+  NativeDocumentPickerCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeDocumentPickerCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeDocumentPickerCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeDocumentPickerCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    jsi::Object getConstants(jsi::Runtime &rt) override {
+      static_assert(
+          bridging::getParameterCount(&T::getConstants) == 1,
+          "Expected getConstants(...) to have 1 parameters");
+
+      return bridging::callFromJs<jsi::Object>(
+          rt, &T::getConstants, jsInvoker_, instance_);
+    }
+    jsi::Value pick(jsi::Runtime &rt, jsi::Object options) override {
+      static_assert(
+          bridging::getParameterCount(&T::pick) == 2,
+          "Expected pick(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::pick, jsInvoker_, instance_, std::move(options));
+    }
+    jsi::Value releaseSecureAccess(jsi::Runtime &rt, jsi::Array uris) override {
+      static_assert(
+          bridging::getParameterCount(&T::releaseSecureAccess) == 2,
+          "Expected releaseSecureAccess(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::releaseSecureAccess, jsInvoker_, instance_, std::move(uris));
+    }
+    jsi::Value pickDirectory(jsi::Runtime &rt) override {
+      static_assert(
+          bridging::getParameterCount(&T::pickDirectory) == 1,
+          "Expected pickDirectory(...) to have 1 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::pickDirectory, jsInvoker_, instance_);
+    }
+
+  private:
+    friend class NativeDocumentPickerCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/rndocumentpicker-generated.cpp b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/rndocumentpicker-generated.cpp
new file mode 100644
index 0000000..03a0b8e
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/rndocumentpicker-generated.cpp
@@ -0,0 +1,46 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniCpp.js
+ */
+
+#include "rndocumentpicker.h"
+
+namespace facebook::react {
+
+
+
+static facebook::jsi::Value __hostFunction_NativeDocumentPickerSpecJSI_pick(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "pick", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeDocumentPickerSpecJSI_releaseSecureAccess(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "releaseSecureAccess", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeDocumentPickerSpecJSI_pickDirectory(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "pickDirectory", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+NativeDocumentPickerSpecJSI::NativeDocumentPickerSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["pick"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerSpecJSI_pick};
+  methodMap_["releaseSecureAccess"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerSpecJSI_releaseSecureAccess};
+  methodMap_["pickDirectory"] = MethodMetadata {0, __hostFunction_NativeDocumentPickerSpecJSI_pickDirectory};
+}
+
+std::shared_ptr<TurboModule> rndocumentpicker_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
+  if (moduleName == "RNDocumentPicker") {
+    return std::make_shared<NativeDocumentPickerSpecJSI>(params);
+  }
+  return nullptr;
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/rndocumentpicker.h b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/rndocumentpicker.h
new file mode 100644
index 0000000..0901b3a
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/rndocumentpicker.h
@@ -0,0 +1,31 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/JavaTurboModule.h>
+#include <ReactCommon/TurboModule.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+/**
+ * JNI C++ class for module 'NativeDocumentPicker'
+ */
+class JSI_EXPORT NativeDocumentPickerSpecJSI : public JavaTurboModule {
+public:
+  NativeDocumentPickerSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+
+JSI_EXPORT
+std::shared_ptr<TurboModule> rndocumentpicker_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-document-picker/android/build/generated/source/codegen/schema.json b/node_modules/react-native-document-picker/android/build/generated/source/codegen/schema.json
new file mode 100644
index 0000000..1dc89c6
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/generated/source/codegen/schema.json
@@ -0,0 +1 @@
+{"modules":{"NativeDocumentPicker":{"type":"NativeModule","aliasMap":{"DirectoryPickerResponse":{"type":"ObjectTypeAnnotation","properties":[{"name":"uri","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}}]},"DocumentPickerResponse":{"type":"ObjectTypeAnnotation","properties":[{"name":"uri","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"name","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"copyError","optional":true,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"fileCopyUri","optional":false,"typeAnnotation":{"type":"NullableTypeAnnotation","typeAnnotation":{"type":"StringTypeAnnotation"}}},{"name":"type","optional":false,"typeAnnotation":{"type":"NullableTypeAnnotation","typeAnnotation":{"type":"StringTypeAnnotation"}}},{"name":"size","optional":false,"typeAnnotation":{"type":"NullableTypeAnnotation","typeAnnotation":{"type":"NumberTypeAnnotation"}}}]}},"enumMap":{},"spec":{"eventEmitters":[],"methods":[{"name":"getConstants","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"ObjectTypeAnnotation","properties":[]},"params":[]}},{"name":"pick","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"ArrayTypeAnnotation","elementType":{"type":"TypeAliasTypeAnnotation","name":"DocumentPickerResponse"}}},"params":[{"name":"options","optional":false,"typeAnnotation":{"type":"GenericObjectTypeAnnotation"}}]}},{"name":"releaseSecureAccess","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"VoidTypeAnnotation"}},"params":[{"name":"uris","optional":false,"typeAnnotation":{"type":"ArrayTypeAnnotation","elementType":{"type":"StringTypeAnnotation"}}}]}},{"name":"pickDirectory","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"TypeAliasTypeAnnotation","name":"DirectoryPickerResponse"}},"params":[]}}]},"moduleName":"RNDocumentPicker"}}}
\ No newline at end of file
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml b/node_modules/react-native-document-picker/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml
new file mode 100644
index 0000000..69460bb
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.reactnativedocumentpicker" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json b/node_modules/react-native-document-picker/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json
new file mode 100644
index 0000000..01d52e3
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "AAPT_FRIENDLY_MERGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.reactnativedocumentpicker",
+  "variantName": "debug",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties b/node_modules/react-native-document-picker/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties
new file mode 100644
index 0000000..1211b1e
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties
@@ -0,0 +1,6 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minCompileSdkExtension=0
+minAndroidGradlePluginVersion=1.0.0
+coreLibraryDesugaringEnabled=false
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/annotation_processor_list/debug/javaPreCompileDebug/annotationProcessors.json b/node_modules/react-native-document-picker/android/build/intermediates/annotation_processor_list/debug/javaPreCompileDebug/annotationProcessors.json
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/annotation_processor_list/debug/javaPreCompileDebug/annotationProcessors.json
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/compile_r_class_jar/debug/generateDebugRFile/R.jar b/node_modules/react-native-document-picker/android/build/intermediates/compile_r_class_jar/debug/generateDebugRFile/R.jar
new file mode 100644
index 0000000..b442b9b
Binary files /dev/null and b/node_modules/react-native-document-picker/android/build/intermediates/compile_r_class_jar/debug/generateDebugRFile/R.jar differ
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/compile_symbol_list/debug/generateDebugRFile/R.txt b/node_modules/react-native-document-picker/android/build/intermediates/compile_symbol_list/debug/generateDebugRFile/R.txt
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties b/node_modules/react-native-document-picker/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
new file mode 100644
index 0000000..4eb10f2
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
@@ -0,0 +1 @@
+#Mon Jun 02 11:26:14 IST 2025
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml b/node_modules/react-native-document-picker/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
new file mode 100644
index 0000000..d3334cd
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\debug\res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\debug\res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated" generated-set="generated$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\build\generated\res\resValues\debug"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/local_only_symbol_list/debug/parseDebugLocalResources/R-def.txt b/node_modules/react-native-document-picker/android/build/intermediates/local_only_symbol_list/debug/parseDebugLocalResources/R-def.txt
new file mode 100644
index 0000000..78ac5b8
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/local_only_symbol_list/debug/parseDebugLocalResources/R-def.txt
@@ -0,0 +1,2 @@
+R_DEF: Internal format may change without notice
+local
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt b/node_modules/react-native-document-picker/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt
new file mode 100644
index 0000000..41b43b9
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt
@@ -0,0 +1,7 @@
+1<?xml version="1.0" encoding="utf-8"?>
+2<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+3    package="com.reactnativedocumentpicker" >
+4
+5    <uses-sdk android:minSdkVersion="24" />
+6
+7</manifest>
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml b/node_modules/react-native-document-picker/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml
new file mode 100644
index 0000000..69460bb
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.reactnativedocumentpicker" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json b/node_modules/react-native-document-picker/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json
new file mode 100644
index 0000000..0637a08
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt b/node_modules/react-native-document-picker/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt
new file mode 100644
index 0000000..08f4ebe
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt
@@ -0,0 +1 @@
+0 Warning/Error
\ No newline at end of file
diff --git a/node_modules/react-native-document-picker/android/build/intermediates/symbol_list_with_package_name/debug/generateDebugRFile/package-aware-r.txt b/node_modules/react-native-document-picker/android/build/intermediates/symbol_list_with_package_name/debug/generateDebugRFile/package-aware-r.txt
new file mode 100644
index 0000000..df6e602
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/intermediates/symbol_list_with_package_name/debug/generateDebugRFile/package-aware-r.txt
@@ -0,0 +1 @@
+com.reactnativedocumentpicker
diff --git a/node_modules/react-native-document-picker/android/build/outputs/logs/manifest-merger-debug-report.txt b/node_modules/react-native-document-picker/android/build/outputs/logs/manifest-merger-debug-report.txt
new file mode 100644
index 0000000..fb442c3
--- /dev/null
+++ b/node_modules/react-native-document-picker/android/build/outputs/logs/manifest-merger-debug-report.txt
@@ -0,0 +1,17 @@
+-- Merging decision tree log ---
+manifest
+ADDED from C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\AndroidManifest.xml:1:1-4:12
+INJECTED from C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\AndroidManifest.xml:1:1-4:12
+	package
+		ADDED from C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\AndroidManifest.xml:2:11-50
+		INJECTED from C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\AndroidManifest.xml
+	xmlns:android
+		ADDED from C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\AndroidManifest.xml:1:11-69
+uses-sdk
+INJECTED from C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\AndroidManifest.xml
+INJECTED from C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from C:\AgreementPaperApp2\node_modules\react-native-document-picker\android\src\main\AndroidManifest.xml
diff --git a/node_modules/react-native-document-picker/android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerModule.java b/node_modules/react-native-document-picker/android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerModule.java
index 5001525..ed92f48 100644
--- a/node_modules/react-native-document-picker/android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerModule.java
+++ b/node_modules/react-native-document-picker/android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerModule.java
@@ -18,7 +18,6 @@ import androidx.annotation.NonNull;
 import com.facebook.react.bridge.ActivityEventListener;
 import com.facebook.react.bridge.Arguments;
 import com.facebook.react.bridge.BaseActivityEventListener;
-import com.facebook.react.bridge.GuardedResultAsyncTask;
 import com.facebook.react.bridge.Promise;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.ReactContext;
@@ -32,7 +31,6 @@ import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
-import java.lang.ref.WeakReference;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.UUID;
@@ -223,127 +221,120 @@ public class RNDocumentPickerModule extends NativeDocumentPickerSpec {
         return;
       }
 
-      new ProcessDataTask(getReactApplicationContext(), uris, copyTo, promise).execute();
+      processSelectedFiles(uris, copyTo, promise);
     } catch (Exception e) {
       sendError(E_UNEXPECTED_EXCEPTION, e.getLocalizedMessage(), e);
     }
   }
 
-  private static class ProcessDataTask extends GuardedResultAsyncTask<ReadableArray> {
-    private final WeakReference<Context> weakContext;
-    private final List<Uri> uris;
-    private final String copyTo;
-    private final Promise promise;
-
-    protected ProcessDataTask(ReactContext reactContext, List<Uri> uris, String copyTo, Promise promise) {
-      super(reactContext.getExceptionHandler());
-      this.weakContext = new WeakReference<>(reactContext.getApplicationContext());
-      this.uris = uris;
-      this.copyTo = copyTo;
-      this.promise = promise;
-    }
-
-    @Override
-    protected ReadableArray doInBackgroundGuarded() {
+  private void processSelectedFiles(List<Uri> uris, String copyTo, Promise promise) {
+    try {
       WritableArray results = Arguments.createArray();
+      Context context = getReactApplicationContext().getApplicationContext();
+      
       for (Uri uri : uris) {
-        results.pushMap(getMetadata(uri));
+        WritableMap fileInfo = getMetadata(context, uri);
+        prepareFileUri(context, fileInfo, uri, copyTo);
+        results.pushMap(fileInfo);
       }
-      return results;
+      
+      promise.resolve(results);
+    } catch (Exception e) {
+      promise.reject(E_UNEXPECTED_EXCEPTION, e);
     }
+  }
 
-    @Override
-    protected void onPostExecuteGuarded(ReadableArray readableArray) {
-      promise.resolve(readableArray);
+  private WritableMap getMetadata(Context context, Uri uri) {
+    ContentResolver contentResolver = context.getContentResolver();
+    WritableMap map = Arguments.createMap();
+    map.putString(FIELD_URI, uri.toString());
+    String mimeType = contentResolver.getType(uri);
+    if (mimeType != null) {
+      map.putString(FIELD_TYPE, mimeType);
     }
     
-    private WritableMap getMetadata(Uri uri) {
-      Context context = weakContext.get();
-      if (context == null) {
-        return Arguments.createMap();
-      }
-      ContentResolver contentResolver = context.getContentResolver();
-      WritableMap map = Arguments.createMap();
-      map.putString(FIELD_URI, uri.toString());
-      map.putString(FIELD_TYPE, contentResolver.getType(uri));
-      try (Cursor cursor = contentResolver.query(uri, null, null, null, null, null)) {
-        if (cursor != null && cursor.moveToFirst()) {
-          int displayNameIndex = cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME);
-          if (!cursor.isNull(displayNameIndex)) {
-            String fileName = cursor.getString(displayNameIndex);
-            map.putString(FIELD_NAME, fileName);
-          } else {
-            map.putNull(FIELD_NAME);
-          }
-          int mimeIndex = cursor.getColumnIndex(DocumentsContract.Document.COLUMN_MIME_TYPE);
-          if (!cursor.isNull(mimeIndex)) {
-            map.putString(FIELD_TYPE, cursor.getString(mimeIndex));
-          }
-          int sizeIndex = cursor.getColumnIndex(OpenableColumns.SIZE);
-          if (cursor.isNull(sizeIndex)) {
-            map.putNull(FIELD_SIZE);
-          } else {
-            map.putDouble(FIELD_SIZE, cursor.getLong(sizeIndex));
-          }
+    try (Cursor cursor = contentResolver.query(uri, null, null, null, null)) {
+      if (cursor != null && cursor.moveToFirst()) {
+        int displayNameIndex = cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME);
+        if (displayNameIndex != -1 && !cursor.isNull(displayNameIndex)) {
+          map.putString(FIELD_NAME, cursor.getString(displayNameIndex));
         }
-      }
         
-      prepareFileUri(context, map, uri);
-      return map;
-    }
+        int mimeIndex = cursor.getColumnIndex(DocumentsContract.Document.COLUMN_MIME_TYPE);
+        if (mimeIndex != -1 && !cursor.isNull(mimeIndex)) {
+          map.putString(FIELD_TYPE, cursor.getString(mimeIndex));
+        }
         
-    private void prepareFileUri(Context context, WritableMap map, Uri uri) {
-      if (copyTo == null) {
-        map.putNull(FIELD_FILE_COPY_URI);
-      } else {
-        copyFileToLocalStorage(context, map, uri);
+        int sizeIndex = cursor.getColumnIndex(OpenableColumns.SIZE);
+        if (sizeIndex != -1 && !cursor.isNull(sizeIndex)) {
+          map.putDouble(FIELD_SIZE, cursor.getLong(sizeIndex));
+        }
       }
+    } catch (Exception e) {
+      Log.e(NAME, "Failed to get file metadata", e);
     }
     
-    private void copyFileToLocalStorage(Context context, WritableMap map, Uri uri) {
-      File dir = context.getCacheDir();
-      if (copyTo.equals("documentDirectory")) {
-        dir = context.getFilesDir();
-      }
-      // we don't want to rename the file so we put it into a unique location
-      dir = new File(dir, UUID.randomUUID().toString());
-      try {
-        boolean didCreateDir = dir.mkdir();
-        if (!didCreateDir) {
-          throw new IOException("failed to create directory at " + dir.getAbsolutePath());
-        }
-        String fileName = map.getString(FIELD_NAME);
-        if (fileName == null) {
-          fileName = String.valueOf(System.currentTimeMillis());
+    // Ensure we have at least a name
+    if (!map.hasKey(FIELD_NAME)) {
+      String path = uri.getPath();
+      if (path != null) {
+        int lastSlash = path.lastIndexOf('/');
+        if (lastSlash != -1) {
+          map.putString(FIELD_NAME, path.substring(lastSlash + 1));
+        } else {
+          map.putString(FIELD_NAME, "unknown");
         }
-        File destFile = safeGetDestination(new File(dir, fileName), dir.getCanonicalPath());
-        Uri copyPath = copyFile(context, uri, destFile);
-        map.putString(FIELD_FILE_COPY_URI, copyPath.toString());
-      } catch (Exception e) {
-        e.printStackTrace();
-        map.putNull(FIELD_FILE_COPY_URI);
-        map.putString(FIELD_COPY_ERROR, e.getLocalizedMessage());
+      } else {
+        map.putString(FIELD_NAME, "unknown");
       }
     }
     
-    public File safeGetDestination(File destFile, String expectedDir) throws IllegalArgumentException, IOException {
-      String canonicalPath = destFile.getCanonicalPath();
-      if (!canonicalPath.startsWith(expectedDir)) {
-        throw new IllegalArgumentException("The copied file is attempting to write outside of the target directory.");
-      }
-      return destFile;
+    return map;
+  }
+
+  private void prepareFileUri(Context context, WritableMap map, Uri uri, String copyTo) {
+    if (copyTo == null) {
+      map.putNull(FIELD_FILE_COPY_URI);
+      return;
     }
     
-    public static Uri copyFile(Context context, Uri uri, File destFile) throws IOException {
-      try(InputStream inputStream = context.getContentResolver().openInputStream(uri);
-          FileOutputStream outputStream = new FileOutputStream(destFile)) {
-        byte[] buf = new byte[8192];
-        int len;
-        while ((len = inputStream.read(buf)) > 0) {
-          outputStream.write(buf, 0, len);
-        }
-        return Uri.fromFile(destFile);
+    File dir = context.getCacheDir();
+    if ("documentDirectory".equals(copyTo)) {
+      dir = context.getFilesDir();
+    }
+    
+    // Create unique directory
+    File uniqueDir = new File(dir, UUID.randomUUID().toString());
+    if (!uniqueDir.exists() && !uniqueDir.mkdirs()) {
+      map.putString(FIELD_COPY_ERROR, "Failed to create directory");
+      return;
+    }
+
+    String fileName = map.getString(FIELD_NAME);
+    if (fileName == null || fileName.isEmpty()) {
+      fileName = "file_" + System.currentTimeMillis();
+    }
+    
+    try {
+      File destFile = new File(uniqueDir, fileName);
+      Uri copyUri = copyFile(context, uri, destFile);
+      map.putString(FIELD_FILE_COPY_URI, copyUri.toString());
+    } catch (Exception e) {
+      Log.e(NAME, "File copy failed", e);
+      map.putNull(FIELD_FILE_COPY_URI);
+      map.putString(FIELD_COPY_ERROR, e.getMessage());
+    }
+  }
+
+  private Uri copyFile(Context context, Uri uri, File destFile) throws IOException {
+    try (InputStream in = context.getContentResolver().openInputStream(uri);
+         FileOutputStream out = new FileOutputStream(destFile)) {
+      byte[] buffer = new byte[8192];
+      int length;
+      while ((length = in.read(buffer)) > 0) {
+        out.write(buffer, 0, length);
       }
+      return Uri.fromFile(destFile);
     }
   }
 
